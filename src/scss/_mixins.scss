/* -------------------- Mixins -------------------- */
/* ------------------------------------------------------------------------------ */

/*** Add prefix for transitions ***/
// $property : on what property is applied the transition
// $duration : the duration of the transition
// $timing 	 : the acceleration used to animate the element
// $delay 	 : the delay after which the animation start
@mixin transitions($property: all, $duration: 0.3s, $timing: ease, $delay: 0) {
	-webkit-transition: $property $duration $timing $delay;
	   -moz-transition: $property $duration $timing $delay;
		-ms-transition: $property $duration $timing $delay;
		 -o-transition: $property $duration $timing $delay;
			transition: $property $duration $timing $delay;
}

@mixin transform-origin($x, $y) {
	-webkit-transform: $x $y;
	   -moz-transform: $x $y;
		-ms-transform: $x $y;
		 -o-transform: $x $y;
			transform: $x $y;
}

@mixin rotate($value) {
	-webkit-transform: rotate($value);
	   -moz-transform: rotate($value);
		-ms-transform: rotate($value);
		 -o-transform: rotate($value);
			transform: rotate($value);
}

@mixin borders($radius, $color) {
	-webkit-border-radius: $radius;
	   -moz-border-radius: $radius;
		-ms-border-radius: $radius;
		 -o-border-radius: $radius;
			border-radius: $radius;
	border: solid 1px $color;
}

@mixin box-shadows($shadows...) {
	-webkit-box-shadow: $shadows;
	   -moz-box-shadow: $shadows;
		-ms-box-shadow: $shadows;
		 -o-box-shadow: $shadows;
			box-shadow: $shadows;
}

@mixin calc($property, $value1, $operation, $value2) {
	$property: -webkit-calc($value1' '$operation' '$value2);
	$property:    -moz-calc($value1' '$operation' '$value2);
	$property: 	   -ms-calc($value1' '$operation' '$value2);
	$property: 		-o-calc($value1' '$operation' '$value2);
	$property: 		   calc($value1' '$operation' '$value2);
}

.acceleration {
	/*-webkit-transform: translateZ(0);
		-ms-transform: translateZ(0);
			transform: translateZ(0);*/
	-webkit-transform: translate3d(0, 0, 0);
		-ms-transform: translate3d(0, 0, 0);
			transform: translate3d(0, 0, 0);
	-webkit-backface-visibility: hidden;
		-ms-backface-visibility: hidden;
			backface-visibility: hidden;
	-webkit-perspective: 1000;
		-ms-perspective: 1000;
			perspective: 1000;
}

.flexbox {
	display: -webkit-flex;
	display:  -ms-flexbox;
	display: 		 flex;

	-webkit-justify-content: center;
		-ms-justify-content: center;
			justify-content: center;

	-webkit-align-items: center;
		-ms-align-items: center;
			align-items: center;
}

.clearfix:after {
	content: "";
	display: table;
	clear: both;
}

.absolute-center-content {
	/*position: absolute;
	top: 0; bottom: 0; left: 0; right: 0;
	margin: auto;
	width: 50%;
	height: 50%;*/

	-webkit-transform: translate3d(-50%,-50%,0);
	transform: translate3d(-50%,-50%,0);
}

.vertical-outer {
	display: table;
}

.vertical-inner {
	display: table-cell;
	vertical-align: middle;
}

.vertical-text {
	@include rotate(-90deg);
}

%noselect {
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-moz-user-select: -moz-none;
	-ms-user-select: none;
	user-select: none;
}
